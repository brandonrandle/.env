" Brandon Randle

" plugins
" load plugins {{{

" using vim-plug for management
call plug#begin('~/.vim/plugged')

" color scheme for vim
Plug 'morhetz/gruvbox'

" python code folding
Plug 'tmhedberg/SimpylFold'

" typescript syntax highlighting
Plug 'leafgarland/typescript-vim'

" beancount syntax highlighting and misc commands
Plug 'nathangrigg/vim-beancount'

" git add/delete/modify markers in left gutter
Plug 'airblade/vim-gitgutter' "

" provides full path fuzzy file searching for vim
Plug 'ctrlpvim/ctrlp.vim'

" vim status bar
Plug 'vim-airline/vim-airline'

" vim startup screen
Plug 'mhinz/vim-startify'

" visually displays indent levels
Plug 'nathanaelkane/vim-indent-guides'

" automatic table creating and formatting
Plug 'dhruvasagar/vim-table-mode'

" git wrapper
Plug 'tpope/vim-fugitive'

" vim commentary for easy commenting of code
Plug 'tpope/vim-commentary'

" Autocomplete
" Plug 'valloric/youcompleteme'

" emmet abbreviation expansion
Plug 'mattn/emmet-vim'

call plug#end()
" }}}

" plugin configuration
" typescript-vim {{{

" disable plugin custom indenter
" let g:typescript_indent_disable = 1

" }}}
" ctrlp {{{

" order matching files top to bottom
let g:ctrlp_match_window = 'bottom,order:ttb'

" always open files in new buffers
let g:ctrlp_switch_buffer = 0

" allow change of working directory
let g:ctrlp_working_path_mode = 'r'

" uses ag for the actual searching (see The Silver Searcher)
let g:ctrlp_user_command = 'ag %s -l --nocolor --hidden -g ""'

" }}}
" vim-gutter {{{

" adjusts updatetime to allow diff markers to appear quickly
set updatetime=100

" }}}
" vim-airline {{{

" required by vim-airline to work properly
set laststatus=2

" }}}
" startify {{{

" sets directory to save/load sessions to/from
let g:startify_session_dir ='~/.vim/session'

" sets bookmarks
let g:startify_bookmarks = ['~/.vimrc']

" }}}
" vim-indent-guides {{{

" enables indent guides on startup
let g:indent_guides_enable_on_vim_startup = 0

" sets guides to one character wide
let g:indent_guides_guide_size = 1

" makes indent guide highlights more subtle
let g:indent_guides_color_change_percent = 3

" }}}

" settings
" colors {{{

" using gruvbox color scheme
set t_Co=256
colorscheme gruvbox
set background=dark

" enable syntax processing
syntax enable

" }}}
" netrw {{{

" settings for netrw buffer
let g:netrw_bufsettings = 'noma nomod nu nobl nowrap ro'

" use tree view by default
let g:netrw_liststyle = 3

" hide banner by default
let g:netrw_banner = 0

" set width of netrw
let g:netrw_winsize = 25

" }}}
" spaces & tabs {{{

" number of visual spaces per TAB
set tabstop=4

" number of spaces a TAB counts for when editing (inserted/removed)
set softtabstop=4

"  used for indentation shifting
set shiftwidth=4

" converts TABs into spaces
set expandtab

" }}}
" ui layout {{{

" shows line numbers
set number

" sets column width for numbers
set numberwidth=4

" enables line numbers relative to current cursor position
set relativenumber

" highlights the current line
set cursorline

" load filetype-specific indent files
filetype indent on

" visual autocomplete for command menu
set wildmenu

" redraws screen only when necessary
set lazyredraw

" hightlights matching [{()}]
set showmatch

" sets window limits
set colorcolumn=79
set textwidth=79

" opens splits to the right and bottom by default
set splitbelow
set splitright

" }}}
" searching {{{

" search as characters are entered
set incsearch

" highlight matches
set hlsearch

" turn off search highlight with \<space>
nnoremap <leader><space> :nohlsearch<CR>

" }}}
" folding {{{

" enable folding
set foldenable

" open most folds by default
set foldlevelstart=10

" 10 nested folds max
set foldnestmax=10

" base folds on indent level
set foldmethod=indent

" remap space to toggle folds
nnoremap <space> za

" }}}
" key mappings {{{

" use jk for escape
inoremap jk <ESC>

" gives backspace additional functionality
set backspace=indent,eol,start

" Remaps split navigation
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" }}}
" autogroups {{{

    augroup configgroup
        autocmd!
        autocmd VimEnter * highlight clear SignColumn
        autocmd BufWritePre *.php, *.py, *.js, *.txt, *.hs, *.java, *.md
            \:call <SID>StripTrailingWhitespaces()
        autocmd FileType php setlocal expandtab
        autocmd FileType php setlocal list
        autocmd FileType php setlocal listchars=tab:+\ ,eol:-
        autocmd FileType php setlocal formatprg=par\ -w80\ -T4
        autocmd FileType python setlocal commentstring=#\ %s
        autocmd FileType typescript setlocal expandtab
        autocmd FileType typescript setlocal tabstop=2
        autocmd FileType typescript setlocal shiftwidth=2
        autocmd FileType typescript setlocal softtabstop=2
        autocmd FileType javascript setlocal expandtab
        autocmd FileType javascript setlocal tabstop=2
        autocmd FileType javascript setlocal shiftwidth=2
        autocmd FileType javascript setlocal softtabstop=2
        autocmd BufEnter Makefile setlocal noexpandtab
        autocmd BufEnter *.sh setlocal tabstop=2
        autocmd BufEnter *.sh setlocal shiftwidth=2
        autocmd BufEnter *.sh setlocal softtabstop=2
        autocmd BufEnter *.html setlocal tabstop=2
        autocmd BufEnter *.html setlocal shiftwidth=2
        autocmd BufEnter *.html setlocal softtabstop=2
        autocmd BufEnter *.md setlocal tabstop=2
        autocmd BufEnter *.md setlocal shiftwidth=2
        autocmd BufEnter *.md setlocal softtabstop=2
        autocmd BufEnter *.yml setlocal tabstop=2
        autocmd BufEnter *.yml setlocal shiftwidth=2
        autocmd BufEnter *.yml setlocal softtabstop=2
        autocmd BufEnter *.twig setlocal tabstop=2
        autocmd BufEnter *.twig setlocal shiftwidth=2
        autocmd BufEnter *.twig setlocal softtabstop=2
    augroup END

" }}}
" backups {{{

" moves all backups to tmp folders
set backup
set backupdir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set backupskip=/tmp/*,/private/tmp/*
set directory=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set writebackup

" }}}
" custom functions {{{

" removes all trailing whitespace in file with F5
nnoremap <F5> :let _s=@/<Bar>:%s/\s\+$//e<Bar>:let @/=_s<Bar>:w<Bar><CR>

" strips trailing whitespace at the end of files
" this function is called on buffer write in the autogroup above
function! <SID>StripTrailingWhitespaces()
    " save last search & cursor position
    let _s=@/
    let l = line(".")
    let c = col(".")
    %s/\s\+$//e
    let @/=_s
    call cursor(l, c)
endfunction

" }}}
" misc {{{

" compatibility settings
set nocompatible
set noshowmode

" encoding
set encoding=utf-8

" set custom command for this file
set modelines=2

" ensures the vimrc uses fold markers and is folded by default
" vim:foldmethod=marker:foldlevel=0
" }}}
